---
- name: Setting {{ app_name }}
  when: update_status
  block:
    - name: Copy {{ app_name }} service
      copy:
        src: /usr/lib/systemd/system/template.service
        dest: /usr/lib/systemd/system/aurora@{{ local_port }}.service
        owner: root
        group: root
        remote_src: yes
        follow: yes
    - name: Modify {{ app_name }} service
      lineinfile:
        path: /usr/lib/systemd/system/aurora@{{ local_port }}.service
        regex: ^ExecStart
        line: ExecStart={{ app_args }}
  rescue:
    - name: Sync template.service
      copy:
        src: files/template.service
        dest: /usr/lib/systemd/system/template.service
        owner: root
        group: root
    - name: Copy {{ app_name }} service
      copy:
        src: /usr/lib/systemd/system/template.service
        dest: /usr/lib/systemd/system/aurora@{{ local_port }}.service
        owner: root
        group: root
        remote_src: yes
        follow: yes
    - name: Modify {{ app_name }} service
      lineinfile:
        path: /usr/lib/systemd/system/aurora@{{ local_port }}.service
        regex: ^ExecStart
        line: ExecStart={{ app_args }}

- name: enable or disable {{ app_name }}
  systemd:
    name: aurora@{{ local_port }}
    state: "{{ 'restarted' if update_status else 'stopped' }}"
    enabled: "{{ 'yes' if update_status else 'no' }}"
    daemon_reload: yes

- name: Checking {{ app_name }} status
  block:
    - name: Get systemd status
      when: update_status
      command: systemctl status aurora@{{ local_port }}
      register: systemd_status
      failed_when: "'Active: active' not in systemd_status.stdout"
  rescue:
    - name: Retry install {{ app_name }} next time
      set_fact: {"{{ app_name }}": "", "cacheable": yes}
    - name: Set error
      set_fact:
        error: "{{ ansible_failed_result.msg }}"
        cacheable: yes
    - name: Set systemd error
      when: systemd_status is defined
      set_fact:
        systemd_error: "{{ systemd_status.stdout }}"
        cacheable: yes
    - fail:
        msg: "{{ ansible_failed_result.msg }}" 