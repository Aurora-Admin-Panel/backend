---
- name: Setting brook
  block:
    - name: Copy brook service
      when: update_status
      copy:
        src: /usr/lib/systemd/system/brook-template.service
        dest: /usr/lib/systemd/system/brook-{{ local_port }}.service
        owner: root
        group: root
        remote_src: yes
        follow: yes
    - name: Modify brook service
      when: update_status
      lineinfile:
        path: /usr/lib/systemd/system/brook-{{ local_port }}.service
        regex: ^ExecStart
        line: ExecStart=/usr/local/bin/brook {{ brook_args }}

    - name: enable or disable brook
      systemd:
        name: brook-{{ local_port }}
        state: "{{ 'restarted' if update_status else 'stopped' }}"
        enabled: "{{ 'yes' if update_status else 'no' }}"
        daemon_reload: yes

    - name: Get systemd status
      when: update_status
      command: systemctl status brook-{{ local_port }}
      register: systemd_status
      failed_when: "'Active: active' not in systemd_status.stdout"
  rescue:
    - name: Retry install brook next time
      set_fact:
        brook: ""
        cacheable: yes
    - name: Set error
      set_fact:
        error: "{{ ansible_failed_result.msg }}"
        cacheable: yes
    - name: Set systemd error
      when: systemd_status is defined
      set_fact:
        systemd_error: "{{ systemd_status.stdout }}"
        cacheable: yes
    - fail:
        msg: "{{ ansible_failed_result.msg }}" 